{{#markdown}}

# Scut <span class="version">v{{version}}</span>

**&mdash; a collection of Sass utilities to ease and improve our implementations of common style-code patterns.**


<small>You can think of the word Scut as an acronym for ***S***ass-***C***SS ***Ut***itilies.
(Or you can think of the word in other ways: Scut will do your *scut work*; let Scut be your *scut monkey*. (But whatever you may do at home, be careful how you use this word in polite company. To learn its many and colorful connotations, [have a look at Wiktionary](http://en.wiktionary.org/wiki/scut).))</small>

**BE AWARE:** Scut is in early stages, under active development, *unstable* &mdash; still in [SemVer](http://semver.org/) v0. **Scut is wide, wide open to contributions**, and I will be building on it myself. New features will be added and old features might be improved. So: **if some part of Scut that you had been using suddenly doesn't work, please check this documentation to see what changed.**

<a href="https://github.com/davidtheclark/scut/" class="intro-btn">Visit the Github repository</a>

<a href="http://codepen.io/davidtheclark/pen/yCadJ" target="_blank" class="intro-btn">Experiment with Scut on Codepen</a>

{{/markdown}}

<section id="about">

  <h2>
    <a href="#about" class="inner-anchor m-intro">About</a>
  </h2>

  <div class="entry-body">
  {{#markdown}}

  For a thorough introduction to Scut, have a look at [my article, "Introducing Scut," on CSS-Tricks](http://css-tricks.com/introducing-scut-new-sass-utility-library/).

  ### Why use Scut?

  #### Avoid repetition

  Scut's primary goal is to save people like you and me from repeating the same few lines of styling code, over and over again, to achieve the same effect in different places.

  #### Organize your rules

  An oft-unsung quality of mixins and placeholders is that they organize your code, *grouping rules according to the effects they combine to achieve*. Even when a mixin applies only a couple of rules (like [`scut-hanging-indent`](#hanging_indent)), it serves this end.

  #### Save some Google searching

  As we would all like to spend a smaller percentage of our lives sitting at red lights, we also hope to spend less life flicking through search results.

  #### Implement best practices

  Some of Scut's utilities, such as [`hd-breakpoint`](#hd_breakpoint) and [`font-face`](#font-face), are all about implementing "best practices" &mdash; without looking them up every time you need them.

  And for any Scut utility, *if somebody figures out a better way to do it, with more flexibility, better browser support, fewer extra `<div>`s, whatever, Scut should be updated accordingly. **So contribute your fabulous ideas and discoveries!***

  ### What makes Scut unique?

  #### Flexible abstractions of common patterns &mdash; nothing more

  Scut doesn't require additional setup and processing, doesn't apply any default sizes, spacing, colors, etc. It is nowhere close to a "framework." The intention is to build utilities that are as simple, flexible, and generic as possible &mdash; abstract patterns that you can work into your own designs without having to override anything or set up site-wide parameters.

  #### No vendor prefixes

  Some other pre-processor libraries do little more than vendor prefixing. Scut doesn't bother with that: we're looking for other things to do.

  Most of Scut's utilities do not use properties that require vendor prefixes. But **if a utility *does* require vendor prefixing, you should be warned in the documentation below. In such cases *and all other cases* Scut suggests that you install and run [Autoprefixer](https://github.com/ai/autoprefixer) as part of the compilation process.** (I rely on [Grunt](http://gruntjs.com/) to make this happen, with the [grunt-autoprefixer plugin](https://github.com/nDmitry/grunt-autoprefixer). Easy as can be.)

  #### @extend placeholders

  All mixins that require no arguments &mdash; either because they *have* no arguments or because all their arguments have default values &mdash; are paired with [placeholder selectors](http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#placeholders), which are good things to use, when you can.

  #### `scut-` prefix

  To avoid confusions and collisions, all Scut utilities &mdash; mixins, placeholders, functions, variables, whatever &mdash; are prefixed with `scut-`.
  {{/markdown}}
  </div>

</section>

<section id="installation">

  <h2>
    <a href="#installation" class="inner-anchor m-intro">Installation</a>
  </h2>

  <div class="entry-body">
    <ol>
      <li> Get the files. You have the following options:
        <div class="install-list">
          <ul>
            <li>
              <strong>Use <a href="http://bower.io/">Bower</a> (<em>recommended</em>)</strong>: <pre class="language-bash"><code>bower install scut --save-dev</code></pre> This will get you the latest release, without superfluous files, and save it as a <code>devDependency</code> for your project. The files you'll need to <code>@import</code> will be in the <code>dist/</code> directory.</li>
            <li>Download <a href="https://github.com/davidtheclark/scut/releases">the latest release from Github</a>.
            </li>
          </ul>
        </div>
      </li>
      <li>Then, from your own Sass/SCSS files, import <code>_scut.scss</code>. Like this: <pre class="language-scss"><code>@import "path/to/scut";</code></pre></li>
    </ol>
    <p><code>_scut.scss</code> is a concatenation of all the files in <code>src/</code>. To inspect the code you're using, you could look in either place.</p>
    <p>Make sure you import Scut <em>above</em> any other stylesheets that will rely on it.</p>
  </div>

</section>

<section id="usage">

  <h2>
    <a href="#usage" class="inner-anchor m-intro">Usage</a>
  </h2>

  <div class="entry-body">
  {{#markdown}}
  Having imported `_scut.scss`, use the mixins and placeholders described below in the manner described below.

  If you have any questions about how to use Sass/SCSS, refer to [the thorough Sass documentation](http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html).

  If the Scut documentation below is inadequate or upsetting, please [file an issue](https://github.com/davidtheclark/scut/issues) or [contact me](https://github.com/davidtheclark).

  ### Browser Support

  Most of Scut's utilities should work magnificently in any modern browser and IE8+.

  If a specific utility *does* have broader compatibility issues, those issues should be noted in the documentation below. (If they are not, please let me know.)
  {{/markdown}}
  </div>

</section>

<section id="contributing">

  <h2>
    <a href="#contributing" class="inner-anchor m-intro">Contributing</a>
  </h2>

  <div class="entry-body">
  {{#markdown}}
  Yes, you can and should contribute.

  Scut is all about making your work, my work, and the work of other developers easier, maybe even a little bit better; extending tutorials into reusable utilities; encouraging best practices; and sharing good ideas &mdash; goals we can agree on. I hope you'll find it a worthy experiment.

  [Visit the repository on Github](https://github.com/davidtheclark/scut) and file issues and pull requests according to the usual Github methods. A little contribution guide is included in the README there.

  If you have any questions, please [file an issue](https://github.com/davidtheclark/scut/issues) or [contact me](https://github.com/davidtheclark).
  {{/markdown}}
  </div>

</section>

<section id="changelog">

  <h2>
    <a href="#changelog" class="inner-anchor m-intro">Changelog</a>
  </h2>

  <div class="entry-body">
    <dl class="changelog">
      {{#each changelog}}
      <dt class="changelog-version">
        <a href="https://github.com/davidtheclark/scut/tree/v{{version}}">{{version}}</a>
      </dt>
      <dd class="changelog-list">
        <ul class="changelog-i-list">
          {{#each items}}
          <li>{{#markdown}}{{{this}}}{{/markdown}}</li>
          {{/each}}
        </ul>
      </dd>
      {{/each}}
    </dl>
  </div>

</section>