/*==========================
LIST: UNSTYLED
http://davidtheclark.github.io/scut/#list_unstyled
==========================*/

@mixin scut-list-unstyled {

  list-style-type: none;
  margin: 0;
  padding: 0;

}

%scut-list-unstyled {
  @include scut-list-unstyled;
}

/*==========================
LIST: FLOATED
http://davidtheclark.github.io/scut/#list_floated

Depends on `list-unstyled`.
==========================*/

@mixin scut-list-floated (
  $in-media: true
) {

  @if $in-media {
    @include scut-list-unstyled;
    @include scut-clearfix;
  }
  @else {
    @extend %scut-list-unstyled;
    @extend %scut-clearfix;
  }

  & > li {
    float: left;
  }

}

%scut-list-floated {
  @include scut-list-floated(false);
}


/*==========================
POSITIONING: COORDINATES
http://davidtheclark.github.io/scut/#positioning_coordinates
==========================*/

@function scut-autoOrValue ($val) {
  @if $val == a or $val == auto {
    @return auto;
  }
  @else {
    @return $val;
  }
}

@mixin scut-coords (
  $coordinates: n n n n
) {

  $top: nth($coordinates, 1);
  $right: nth($coordinates, 2);
  $bottom: nth($coordinates, 3);
  $left: nth($coordinates, 4);

  @if $top != n {
    top: scut-autoOrValue($top);
  }
  @if $right != n {
    right: scut-autoOrValue($right);
  }
  @if $bottom != n {
    bottom: scut-autoOrValue($bottom);
  }
  @if $left != n {
    left: scut-autoOrValue($left);
  }

}

/*==========================
HD BREAKPOINT
http://davidtheclark.github.io/scut/#hd_breakpoint
==========================*/

@mixin scut-hd-bp (
  $ratio: 1.3
) {

  @media (-o-min-device-pixel-ratio: #{$ratio}/1),
         (-webkit-min-device-pixel-ratio: #{$ratio}),
         (min-resolution: #{round(96*$ratio)}dpi) {
    @content;
  }

}

/*==========================
HIDE TEXT
http://davidtheclark.github.io/scut/#hide_text
==========================*/

  @mixin scut-hide-text {

    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;

  }

  %scut-hide-text {
    @include scut-hide-text;
  }

/*==========================
SELECTED
http://davidtheclark.github.io/scut/#selected
==========================*/

@mixin scut-selected (
  $active: true
) {

  @if $active {
    &:hover,
    &:focus,
    &:active {
      @content;
    }
  }
  @else {
    &:hover,
    &:focus {
      @content;
    }
  }

}

/*==========================
CLEARFIX
http://davidtheclark.github.io/scut/#clearfix
==========================*/

@mixin scut-clearfix {

  &:after {
    content: "";
    display: table;
    clear: both;
  }

}

%scut-clearfix {
  @include scut-clearfix;
}

/*==========================
FILL
http://davidtheclark.github.io/scut/#fill
==========================*/

@mixin scut-fill {

  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;

}

%scut-fill {
  @include scut-fill;
}

/*==========================
LIST: DIVIDED
http://davidtheclark.github.io/scut/#list_divided

Depends on `list-floated`, which depends in turn on `list-unstyled`.
==========================*/

@mixin scut-list-divided (
  $divider: "|",
  $gap: 0.5em,
  $in-media: false
) {

  @if $in-media {
    @include scut-list-floated;
  }
  @else {
    @extend %scut-list-floated;
  }

  & > li {
    &:not(:last-child):after {
      content: $divider;
      margin-left: $gap;
      margin-right: $gap;
    }
  }

}

%scut-list-bar {
  @include scut-list-divided;
}

%scut-list-breadcrumb {
  @include scut-list-divided("/");
}

/*==========================
LIST: INLINE
http://davidtheclark.github.io/scut/#list_inline

Depends on `list-unstyled`.
==========================*/

@mixin scut-list-inline (
  $in-media: true
) {

  @if $in-media {
    @include scut-list-unstyled;
  }
  @else {
    @extend %scut-list-unstyled;
  }

  & > li {
    display: inline-block;
  }

}

%scut-list-inline {
  @include scut-list-inline(false);
}

/*==========================
LIST: PUNCTUATED
http://davidtheclark.github.io/scut/#list_punctuated

Depends on `list-unstyled`.
==========================*/

@mixin scut-list-punctuated (
  $divider: ", ",
  $display: inline,
  $in-media: false
) {

  @if $in-media {
    @include scut-list-unstyled;
  }
  @else {
    @extend %scut-list-unstyled;
  }

  & > li {
    display: $display;
    &:not(:last-child):after {
      content: $divider;
    }
  }

}

%scut-list-comma {
  @include scut-list-punctuated;
}

/*==========================
POSITIONING: ABSOLUTE
http://davidtheclark.github.io/scut/#positioning_absolute

Depends on `positioning-coordinates`.
==========================*/

@mixin scut-absolute (
  $coordinates: 0 n n 0
) {

  position: absolute;
  @include scut-coords($coordinates);

}

%scut-absolute {
  @include scut-absolute;
}

/*==========================
POSITIONING: FIXED
http://davidtheclark.github.io/scut/#positioning_fixed

Depends on `positioning-coordinates`.
==========================*/

@mixin scut-fixed (
  $coordinates: 0 n n 0
) {

  position: fixed;
  @include scut-coords($coordinates);

}

%scut-fixed {
  @include scut-fixed;
}

/*==========================
POSITIONING: RELATIVE
http://davidtheclark.github.io/scut/#positioning_relative

Depends on `positioning-coordinates`.
==========================*/

@mixin scut-relative (
  $coordinates: n n n n
) {

  position: relative;
  @include scut-coords($coordinates);

}

/*==========================
RATIO-BOX
http://davidtheclark.github.io/scut/#ratio-box
==========================*/

@mixin scut-ratio-box (
  $ratio: 100%,
  $inner: ".scut-inner"
) {

  height: 0;
  overflow: hidden;
  padding-top: $ratio;
  position: relative;

  & > #{$inner} {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
  }

}

%scut-ratio-box {
  @include scut-ratio-box;
}

/*==========================
SIZE
http://davidtheclark.github.io/scut/#size
==========================*/

@mixin scut-size(
  $size
) {

  @if length($size) == 1 {
    width:  $size;
    height: $size;
  }
  @else if length($size) == 2 {
    width:  nth($size, 1);
    height: nth($size, 2);
  }

}

/*==========================
V-CENTER: INLINE-BLOCK
http://davidtheclark.github.io/scut/#v-center_inline-block
==========================*/

@mixin scut-vcenter-ib (
  $inner: ".scut-inner"
) {

  &:before {
    content: "";
    display: inline-block;
    height: 100%;
    vertical-align: middle;
    margin-right: -0.25em;
  }

  & > #{$inner} {
    display: inline-block;
    vertical-align: middle;
  }

}

%scut-vcenter-ib {
  @include scut-vcenter-ib;
}


/*==========================
V-CENTER: LINE-HEIGHT
http://davidtheclark.github.io/scut/#v-center_line-height
==========================*/

@mixin scut-vcenter-lh (
  $height
) {

  height: $height;
  line-height: $height;

}

/*==========================
V-CENTER: TABLE DISPLAY
http://davidtheclark.github.io/scut/#v-center_table_display
==========================*/

@mixin scut-vcenter-td (
  $inner: ".scut-inner"
) {

  display: table;

  & > #{$inner} {
    display: table-cell;
    vertical-align: middle;
  }

}


%scut-vcenter-td {
  @include scut-vcenter-td;
}

/*==========================
CIRCLE
http://davidtheclark.github.io/scut/#circle
==========================*/

@mixin scut-circle (
  $size,
  $color: inherit
) {

  border-radius: 50%;
  display: inline-block;

  @if $color == inherit {
    border-width: $size / 2;
    border-style: solid;
    height: 0;
    width: 0;
  }
  @else {
    background-color: $color;
    height: $size;
    width: $size;
  }

}

/*==========================
FOURSQUARE
http://davidtheclark.github.io/scut/#foursquare
==========================*/

@mixin scut-foursquare (
  $rotate: true,
  $side: 10px,
  $line-x: 1px,
  $color: black,
  $line: white
) {

  $full-side: $side + $line-x;

  background-color: $color;
  display: inline-block;
  height: $full-side;
  width: $full-side;
  position: relative;

  @if $rotate {
    transform: rotate(45deg);
  }

  &:before,
  &:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    border-color: $line;
    border-style: solid;
  }
  &:before {
    height: $side/2;
    right: 0;
    border-width: 0 0 $line-x;
  }
  &:after {
    width: $side/2;
    bottom: 0;
    border-width: 0 $line-x 0 0;
  }

}

%scut-foursquare {
  @include scut-foursquare;
}

/*==========================
TRIANGLE
http://davidtheclark.github.io/scut/#triangle
==========================*/

@mixin scut-triangle (
  $direction: right,
  $size: 1.4em 0.75em,
  $color: inherit,
  $pseudo: false
) {

  display: inline-block;
  height: 0;
  width: 0;
  // for improved appearance in Webkit browsers
  -webkit-transform: rotate(360deg);

  @if $pseudo {
    content: "";
  }

  $dimensions: false;
  @if type-of($size) == list {
    $width: nth($size, 1);
    $height: nth($size, 2);
    $dimensions: ($height / 2) ($width / 2);
  }
  @else {
    $dimensions: ($size / 2) ($size / 2);
  }
  border-width: $dimensions;
  border-style: solid;


  // STANDARD TRIANGLES

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    border-color: transparent;
    @if $direction == up {
      border-bottom-color: $color;
      border-top-width: 0;
    }
    @else if $direction == right {
      border-left-color: $color;
      border-right-width: 0;
    }
    @else if $direction == down {
      border-top-color: $color;
      border-bottom-width: 0;
    }
    @else if $direction == left {
      border-right-color: $color;
      border-left-width: 0;
    }
  }


  // CORNER TRIANGLES

  @else if ($direction == up-right) or ($direction == up-left) {
    border-top-color: $color;
    border-bottom-color: transparent;
    @if $direction == up-right {
      border-left-color: transparent;
      border-right-color: $color;
    }
    @else if $direction == up-left {
      border-left-color: $color;
      border-right-color: transparent;
    }
  }

  @else if ($direction == down-right) or ($direction == down-left) {
    border-top-color: transparent;
    border-bottom-color: $color;
    @if $direction == down-right {
      border-left-color: transparent;
      border-right-color: $color;
    }
    @else if $direction == down-left {
      border-left-color: $color;
      border-right-color: transparent;
    }
  }

}

%scut-triangle {
  @include scut-triangle;
}

/*==========================
FONT-FACE
http://davidtheclark.github.io/scut/#font-face
==========================*/

@mixin scut-font-face (
  $font-family,
  $file-path,
  $weight: normal,
  $style: normal
) {

  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    src: url('#{$file-path}.eot');
    src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
         url('#{$file-path}.woff') format('woff'),
         url('#{$file-path}.ttf') format('truetype'),
         url('#{$file-path}.svg##{$font-family}') format('svg');
  }

}

/*==========================
HANGING INDENT

==========================*/

@mixin scut-hanging-indent (
  $indent: 1em
) {

  text-indent: -$indent;
  padding-left: $indent;

}

%scut-hanging-indent {
  @include scut-hanging-indent;
}

@mixin scut-header-lined (
  $height: 1px,
  $pad: 0.5em,
  $color: inherit,
  $style: solid,
  $v-adjust: false,
  $double: false
) {

  overflow: hidden;
  text-align: center;

  &:before,
  &:after {
    content: "";
    display: inline-block;
    vertical-align: middle;
    position: relative;
    width: 50%;

    border-top-style: $style;
    border-top-width: $height;

    @if $color != inherit {
      border-top-color: $color;
    }

    @if $v-adjust != false {
      bottom: $v-adjust;
    }

    @if $double != false {
      height: $double;
      border-bottom-style: $style;
      border-bottom-width: $height;
      @if $color != inherit {
        border-bottom-color: $color;
      }
    }
  }

  &:before {
    right: $pad;
    margin-left: -50%;
  }
  &:after {
    left: $pad;
    margin-right: -50%;
  }

}

%scut-header-lined {
  @include scut-header-lined;
}

/*==========================
INDENTED PARAGRAPHS
http://davidtheclark.github.io/scut/#indented_paragraphs
==========================*/

@mixin scut-indented-ps (
  $indent: 1.5em,
  $no-first-indent: true
) {

  p {
    margin: 0;
    text-indent: $indent;
  }

  @if $no-first-indent {
    p:first-of-type {
      text-indent: 0;
    }
  }

}

%scut-indented-ps {
  @include scut-indented-ps;
}

/*==========================
LINK: BOTTOM-BORDERED
http://davidtheclark.github.io/scut/#link_bottom-bordered
==========================*/

@mixin scut-link-bb (
  $color: inherit,
  $style: solid,
  $width: 1px
) {

  text-decoration: none;

  border-bottom-width: $width;
  border-bottom-style: $style;
  @if $color != inherit {
    border-bottom-color: $color;
  }

}

%scut-link-bb {
  @include scut-link-bb;
}

/*==========================
REVERSE ITALICS
http://davidtheclark.github.io/scut/#reverse-italics
==========================*/

@mixin scut-reverse-italics (
  $elements: false
) {

  $element-list: em, cite, i;
  @each $el in $elements {
    $unquoted-value: unquote($el);
    $element-list: append($element-list, unquote($el), comma)
  }

  font-style: italic;
  #{$element-list} {
    font-style: normal;
  }

}

%scut-reverse-italics {
  @include scut-reverse-italics;
}